// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"gin_boot/config"
	"gin_boot/internal/controller"
	"gin_boot/internal/dao"
	"gin_boot/internal/ioc"
	"gin_boot/internal/router"
	"gin_boot/internal/service"
	"gin_boot/internal/utils/captcha"
	"gin_boot/internal/utils/redis"
)

// Injectors from wire.go:

func InitWebServer() (*ioc.Server, error) {
	configConfig := config.LoadConfig()
	client := ioc.InitRedis(configConfig)
	redisService := redis.NewRedisService(client)
	redisStore := captcha.NewRedisStore(redisService)
	captchaService := service.NewCaptchaService(redisStore, configConfig)
	controllerCaptcha := controller.NewCaptchaController(redisStore, captchaService)
	db := ioc.InitDB(configConfig)
	userDao := dao.NewUserDao(db)
	userService := service.NewUserService(userDao)
	userController := controller.NewUserController(userService)
	v := router.NewAllHandlers(controllerCaptcha, userController)
	logger, err := ioc.InitLogger(configConfig)
	if err != nil {
		return nil, err
	}
	server, err := ioc.InitWebServer(configConfig, v, logger)
	if err != nil {
		return nil, err
	}
	return server, nil
}
